[workspace]
members = ["xtask"]
[workspace.package]
license = "Apache-2.0"

# See also `rust-toolchain.toml`
rust-version = "1.78.0"

# Keep alphabetically sorted
[workspace.lints.rust]
elided_lifetimes_in_paths = "warn"
explicit_outlives_requirements = "warn"
macro_use_extern_crate = "warn"
missing_abi = "warn"
noop_method_call = "warn"
pointer_structural_match = "warn"
single_use_lifetimes = "warn"
unreachable_pub = "warn"
unsafe_op_in_unsafe_fn = "warn"
unused_extern_crates = "warn"
unused_import_braces = "warn"
unused_lifetimes = "warn"
unused_macro_rules = "warn"
unused_qualifications = "warn"

[workspace.lints.clippy]
# Groups. Keep alphabetically sorted
pedantic = "warn"

# Lints. Keep alphabetically sorted
as_conversions = "warn"
assertions_on_result_states = "warn"
dbg_macro = "warn"
default_union_representation = "warn"
deref_by_slicing = "warn"
empty_drop = "warn"
empty_structs_with_brackets = "warn"
error_impl_error = "warn"
filetype_is_file = "warn"
float_cmp_const = "warn"
format_push_string = "warn"
get_unwrap = "warn"
if_then_some_else_none = "warn"
impl_trait_in_params = "warn"
let_underscore_must_use = "warn"
lossy_float_literal = "warn"
mem_forget = "warn"
missing_assert_message = "warn"
mod_module_files = "warn"
multiple_inherent_impl = "warn"
mutex_atomic = "warn"
negative_feature_names = "warn"
pub_without_shorthand = "warn"
rc_buffer = "warn"
rc_mutex = "warn"
redundant_feature_names = "warn"
redundant_type_annotations = "warn"
ref_patterns = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_name_method = "warn"
semicolon_inside_block = "warn"
str_to_string = "warn"
string_add = "warn"
string_lit_chars_any = "warn"
string_slice = "warn"
string_to_string = "warn"
suspicious_xor_used_as_pow = "warn"
tests_outside_test_module = "warn"
try_err = "warn"
undocumented_unsafe_blocks = "warn"
unnecessary_safety_comment = "warn"
unnecessary_safety_doc = "warn"
unnecessary_self_imports = "warn"
unneeded_field_pattern = "warn"
unseparated_literal_suffix = "warn"
verbose_file_reads = "warn"
wildcard_dependencies = "warn"

# TODO: Remove these:
missing_errors_doc = "allow"
missing_panics_doc = "allow"

# Keep sorted
[workspace.dependencies]
argon2 = "0.5.3"
async-trait = "0.1.80"
axum = { version = "0.7.5", default-features = false, features = ["form", "http1", "http2", "json", "matched-path", "tracing"] }
axum-extra = { version = "0.9.3", features = ["typed-header"] }
axum-server = { version = "0.6.0", features = ["tls-rustls"] }
base64 = "0.22.1"
bytes = "1.6.0"
clap = { version = "4.5.4", default-features = false, features = ["std", "derive", "help", "usage", "error-context", "string", "wrap_help"] }
futures-util = { version = "0.3.30", default-features = false }
hmac = "0.12.1"
html-escape = "0.2.13"
http = "1.1.0"
http-body-util = "0.1.1"
hyper = "1.3.1"
hyper-util = { version = "0.1.4", features = ["client", "client-legacy", "service"] }
image = { version = "0.25.1", default-features = false, features = ["jpeg", "png", "gif"] }
indicatif = "0.17.8"
jsonwebtoken = "9.3.0"
lru-cache = "0.1.2"
miette = { version = "7.2.0", features = ["fancy"] }
nix = { version = "0.29", features = ["resource"] }
num_cpus = "1.16.0"
once_cell = "1.19.0"
opentelemetry = "0.23.0"
opentelemetry-jaeger-propagator = "0.2.0"
opentelemetry-otlp = "0.16.0"
opentelemetry-prometheus = "0.16.0"
opentelemetry_sdk = { version = "0.23.0", features = ["rt-tokio"] }
parking_lot = "0.12.3"
phf = { version = "0.11.2", features = ["macros"] }
process-wrap = { version = "8.0.2", default-features = false, features = ["std", "process-group"] }
prometheus = "0.13.4"
rand = "0.8.5"
regex = "1.10.4"
reqwest = { version = "0.12.4", default-features = false, features = ["http2", "rustls-tls-native-roots", "socks"] }
ring = "0.17.8"
rocksdb = { package = "rust-rocksdb", version = "0.26.0", features = ["lz4", "multi-threaded-cf", "zstd"] }
ruma = { git = "https://github.com/ruma/ruma", branch = "main", features = ["compat", "rand", "appservice-api-c", "client-api", "federation-api", "push-gateway-api-c", "server-util", "state-res", "unstable-msc2448", "unstable-msc3575", "unstable-exhaustive-types", "ring-compat", "unstable-unspecified" ] }
rusqlite = { version = "0.31.0", features = ["bundled"] }
sd-notify = { version = "0.4.1" }
serde = { version = "1.0.202", features = ["rc", "derive"] }
serde_html_form = "0.2.6"
serde_json = { version = "1.0.117", features = ["raw_value"] }
serde_yaml = "0.9.34"
sha-1 = "0.10.1"
signal-hook = "0.3.17"
strum = { version = "0.26.2", features = ["derive"] }
thiserror = "1.0.61"
thread_local = "1.1.8"
tikv-jemallocator = { version = "0.5.4", features = ["unprefixed_malloc_on_supported_platforms"] }
tokio = { version = "1.37.0", features = ["fs", "macros", "signal", "sync"] }
toml = "0.8.14"
tower = { version = "0.4.13", features = ["util"] }
tower-http = { version = "0.5.2", features = ["add-extension", "cors", "sensitive-headers", "trace", "util"] }
tracing = { version = "0.1.40", features = [] }
tracing-flame = "0.2.0"
tracing-opentelemetry = "0.24.0"
tracing-subscriber = { version = "0.3.18", features = ["env-filter", "json"] }
trust-dns-resolver = "0.23.2"
xdg = "2.5.2"
xshell = "0.2.6"

[package]
name = "grapevine"
description = "A Matrix homeserver written in Rust"
license.workspace = true
version = "0.1.0"
edition = "2021"
rust-version.workspace = true

[lints]
workspace = true

# Keep sorted
[dependencies]
argon2.workspace = true
async-trait.workspace = true
axum.workspace = true
axum-extra.workspace = true
axum-server.workspace = true
base64.workspace = true
bytes.workspace = true
clap.workspace = true
futures-util.workspace = true
hmac.workspace = true
html-escape.workspace = true
http.workspace = true
http-body-util.workspace = true
hyper.workspace = true
hyper-util.workspace = true
image.workspace = true
jsonwebtoken.workspace = true
lru-cache.workspace = true
num_cpus.workspace = true
once_cell.workspace = true
opentelemetry.workspace = true
opentelemetry-jaeger-propagator.workspace = true
opentelemetry-otlp.workspace = true
opentelemetry-prometheus.workspace = true
opentelemetry_sdk.workspace = true
parking_lot = { workspace = true, optional = true }
phf.workspace = true
prometheus.workspace = true
rand.workspace = true
regex.workspace = true
reqwest.workspace = true
ring.workspace = true
rocksdb = { workspace = true, optional = true }
ruma.workspace = true
rusqlite = { workspace = true, optional = true }
sd-notify = { workspace = true, optional = true }
serde.workspace = true
serde_html_form.workspace = true
serde_json.workspace = true
serde_yaml.workspace = true
sha-1.workspace = true
strum.workspace = true
thiserror.workspace = true
thread_local.workspace = true
tikv-jemallocator = { workspace = true, optional = true }
tokio.workspace = true
toml.workspace = true
tower.workspace = true
tower-http.workspace = true
tracing.workspace = true
tracing-flame.workspace = true
tracing-opentelemetry.workspace = true
tracing-subscriber.workspace = true
trust-dns-resolver.workspace = true
xdg.workspace = true

[target.'cfg(unix)'.dependencies]
nix.workspace = true

[features]
default = ["rocksdb", "sqlite", "systemd"]

# Keep sorted
jemalloc = ["dep:tikv-jemallocator"]
rocksdb = ["dep:rocksdb"]
sqlite = ["dep:rusqlite", "dep:parking_lot", "tokio/signal"]
systemd = ["dep:sd-notify"]
